import {
  require_with_selector
} from "./chunk-S6ZZXPLH.js";
import {
  require_react
} from "./chunk-DX72WRB3.js";
import {
  __commonJS,
  __export,
  __reExport,
  __toESM
} from "./chunk-IKZWERSR.js";

// ../node_modules/.pnpm/zustand@4.5.7_@types+react@18.3.23_react@18.3.1/node_modules/zustand/vanilla.js
var require_vanilla = __commonJS({
  "../node_modules/.pnpm/zustand@4.5.7_@types+react@18.3.23_react@18.3.1/node_modules/zustand/vanilla.js"(exports, module) {
    "use strict";
    var createStoreImpl = function createStoreImpl2(createState) {
      var state;
      var listeners = /* @__PURE__ */ new Set();
      var setState = function setState2(partial, replace) {
        var nextState = typeof partial === "function" ? partial(state) : partial;
        if (!Object.is(nextState, state)) {
          var _previousState = state;
          state = (replace != null ? replace : typeof nextState !== "object" || nextState === null) ? nextState : Object.assign({}, state, nextState);
          listeners.forEach(function(listener) {
            return listener(state, _previousState);
          });
        }
      };
      var getState = function getState2() {
        return state;
      };
      var getInitialState = function getInitialState2() {
        return initialState;
      };
      var subscribe = function subscribe2(listener) {
        listeners.add(listener);
        return function() {
          return listeners.delete(listener);
        };
      };
      var destroy = function destroy2() {
        if (true) {
          console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.");
        }
        listeners.clear();
      };
      var api = {
        setState,
        getState,
        getInitialState,
        subscribe,
        destroy
      };
      var initialState = state = createState(setState, getState, api);
      return api;
    };
    var createStore2 = function createStore3(createState) {
      return createState ? createStoreImpl(createState) : createStoreImpl;
    };
    var vanilla = function(createState) {
      if (true) {
        console.warn("[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.");
      }
      return createStore2(createState);
    };
    exports.createStore = createStore2;
    exports.default = vanilla;
    module.exports = vanilla;
    module.exports.createStore = createStore2;
    exports.default = module.exports;
  }
});

// ../node_modules/.pnpm/zustand@4.5.7_@types+react@18.3.23_react@18.3.1/node_modules/zustand/esm/index.mjs
var esm_exports = {};
__export(esm_exports, {
  create: () => create,
  default: () => react,
  useStore: () => useStore
});
var import_vanilla = __toESM(require_vanilla(), 1);
__reExport(esm_exports, __toESM(require_vanilla(), 1));
var import_react = __toESM(require_react(), 1);
var import_with_selector = __toESM(require_with_selector(), 1);
var { useDebugValue } = import_react.default;
var { useSyncExternalStoreWithSelector } = import_with_selector.default;
var didWarnAboutEqualityFn = false;
var identity = (arg) => arg;
function useStore(api, selector = identity, equalityFn) {
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && equalityFn && !didWarnAboutEqualityFn) {
    console.warn(
      "[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"
    );
    didWarnAboutEqualityFn = true;
  }
  const slice = useSyncExternalStoreWithSelector(
    api.subscribe,
    api.getState,
    api.getServerState || api.getInitialState,
    selector,
    equalityFn
  );
  useDebugValue(slice);
  return slice;
}
var createImpl = (createState) => {
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && typeof createState !== "function") {
    console.warn(
      "[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."
    );
  }
  const api = typeof createState === "function" ? (0, import_vanilla.createStore)(createState) : createState;
  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);
  Object.assign(useBoundStore, api);
  return useBoundStore;
};
var create = (createState) => createState ? createImpl(createState) : createImpl;
var react = (createState) => {
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
    console.warn(
      "[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."
    );
  }
  return create(createState);
};
export {
  create,
  react as default,
  useStore
};
//# sourceMappingURL=zustand.js.map

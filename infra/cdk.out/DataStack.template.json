{
 "Resources": {
  "AppPostgresSubnetGroupF97DFE41": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for AppPostgres database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "VpcStack:ExportsOutputRefAppVpcprivateSubnet1Subnet8CF47DFB43A8E9EA"
     },
     {
      "Fn::ImportValue": "VpcStack:ExportsOutputRefAppVpcprivateSubnet2Subnet2BB4B2161CC6673C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataStack/AppPostgres/SubnetGroup/Default"
   }
  },
  "AppPostgresSecurityGroupC6182064": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for AppPostgres database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VpcStack:ExportsOutputRefAppVpc80F1F7F93D0AA00C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataStack/AppPostgres/SecurityGroup/Resource"
   }
  },
  "DataStackAppPostgresSecretA04F47CE3fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DataStack/AppPostgres/Secret/Resource"
   }
  },
  "AppPostgresSecretAttachmentB8DBF484": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "DataStackAppPostgresSecretA04F47CE3fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "AppPostgres87C39802"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "DataStack/AppPostgres/Secret/Attachment/Resource"
   }
  },
  "AppPostgres87C39802": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBName": "appdb",
    "DBSubnetGroupName": {
     "Ref": "AppPostgresSubnetGroupF97DFE41"
    },
    "DeletionProtection": false,
    "Engine": "postgres",
    "EngineVersion": "14",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DataStackAppPostgresSecretA04F47CE3fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": "postgres",
    "MaxAllocatedStorage": 100,
    "MultiAZ": false,
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "AppPostgresSecurityGroupC6182064",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DataStack/AppPostgres/Resource"
   }
  },
  "AppRedis": {
   "Type": "AWS::ElastiCache::CacheCluster",
   "Properties": {
    "CacheNodeType": "cache.t3.micro",
    "Engine": "redis",
    "NumCacheNodes": 1,
    "VpcSecurityGroupIds": []
   },
   "Metadata": {
    "aws:cdk:path": "DataStack/AppRedis"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11Q0Q6CMAz8Ft9HNYvxXSExvorvpoyKExhm7TSG8O9OiUR9uvZ6d22qQS9WsJjhnRNT1kljC+hzQVOrSB17XzL0GQoWyLRzLOgMqTwUjmTru3BV6cllm2/io87JeJJx/nEOioyOC8gEb+UxJfwQg+K3lVt0WJGHflS80kY4oK9I1hLvPLfkRE2C/0lc2CCLNbEniLL0VaRNYCE/DMp1JcGF5ze9BB3/cGFrEx+c2JZgP+IT+dfbUyQBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "DataStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}